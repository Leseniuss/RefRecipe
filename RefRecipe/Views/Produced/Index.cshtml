@model IEnumerable<RefRecipe.Data.Produce>

@{
    ViewData["Title"] = "Index";
    var produceList = Model.ToList();
}

<style>


    body {
        background-image: url("refrescologo.png");
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .hometable {
        width: 100%;
        height: 100%;
        border-collapse: collapse;
        background-image: url("Views/Home/refrescologo.png");
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }

        .hometable th, .hometable td {
            border-bottom: 2px solid blue;
            padding: 4px;
            text-align: center;
        }

        .hometable th {
            background-color: #f2f2f2;
        }
</style>


<body>
    <table class="hometable">
        <thead>
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.SapCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Timestamp)
                </th>



                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr style="background-color: @(produceList.IndexOf(item) % 2 == 0 ? "lightgreen" : "orange")">

                    <td>@Html.DisplayFor(modelItem => item.Id)</td>

                    <td>@Html.DisplayFor(modelItem => item.SapCode)</td>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Timestamp)</td>


                    

                </tr>
            }

        </tbody>
    </table>
</body>
@if (ViewBag.ErrorMessage != null)
{
    <div class="text-danger">@ViewBag.ErrorMessage</div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
